{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAAgD;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;AAED;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAY;AAChB;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAE0C;;;;;;;;;;;;;;;;AClC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEqC;;;;;;;;;;;;;;;;ACzCa;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN,iCAAiC;AACjC;AACA,WAAW;AACX;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,iBAAiB;;AAEzD;AACA;AACA;AACA;;AAEA;;AAEA,6BAA6B,oBAAoB;;AAEjD,oCAAoC;AACpC;AACA,OAAO,GAAG,aAAa;AACvB;AACA;;AAEA,4BAA4B,6BAA6B;;AAEzD,0BAA0B,oCAAoC;AAC9D,iCAAiC,wBAAwB;AACzD;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,4BAA4B,gCAAgC,IAAI,aAAa;AAC7E;;AAEwB;;;;;;;UCzGxB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN6D;AACS;;AAEtE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA,IAAI,kEAAa;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,QAAQ,2DAAU;AAClB;AACA,CAAC","sources":["webpack://beyond/./src/fetchPlanetData.js","webpack://beyond/./src/imageSlider.js","webpack://beyond/./src/populateDom.js","webpack://beyond/webpack/bootstrap","webpack://beyond/webpack/runtime/define property getters","webpack://beyond/webpack/runtime/hasOwnProperty shorthand","webpack://beyond/webpack/runtime/make namespace object","webpack://beyond/./src/index.js"],"sourcesContent":["import { populateData } from \"./populateDom.js\";\n\n// Listen for click on planet images\nconst planetImages = document.querySelectorAll(\"#box > img\");\nconst imageBoxes = document.querySelectorAll(\"#box\");\nplanetImages.forEach((planet) => {\n    planet.addEventListener(\"click\", function (e) {\n        window.scrollTo(0, 0);\n        let planetName = e.target.id;\n        getPlanetData(planetName);\n        highlightPlanet(e.target.parentElement);\n    });\n});\n\n// Fetch planet data from Solar System OpenData API\nasync function getPlanetData(planetName) {\n    const response = await fetch(\n        `https://api.le-systeme-solaire.net/rest/bodies/${planetName}`,\n        {\n            mode: \"cors\",\n        }\n    );\n    let planetData = await response.json();\n    populateData(planetData);\n}\n\n// Highlight current planet\nfunction highlightPlanet(target) {\n    imageBoxes.forEach((image) => {\n        image.style.border = \"none\";\n    });\n    target.style.border = \"1px solid whitesmoke\";\n}\n\nexport { getPlanetData, highlightPlanet };\n","// Move slider left or right\nfunction moveSlider(handle) {\n    const slider = handle.closest(\"#slider-container\").querySelector(\"#slider\");\n    const sliderIndex = parseInt(\n        getComputedStyle(slider).getPropertyValue(\"--slider-index\")\n    );\n\n    // When clicking left arrow when at left end of carousel, move to right end\n    if (handle.classList.contains(\"left-handle\")) {\n        if (sliderIndex <= 0) {\n            slider.style.setProperty(\"--slider-index\", 2);\n        } else {\n            slider.style.setProperty(\"--slider-index\", sliderIndex - 1);\n        }\n    }\n\n    // When clicking right arrow when at right end of carousel, move to left end\n    if (handle.classList.contains(\"right-handle\")) {\n        if (sliderIndex >= 2) {\n            slider.style.setProperty(\"--slider-index\", 0);\n        } else {\n            slider.style.setProperty(\"--slider-index\", sliderIndex + 1);\n        }\n    }\n\n    checkProgress();\n}\n\n// Update progress bar highlighting\nfunction checkProgress() {\n    document.querySelectorAll(\".progress-blip\").forEach((blip) => {\n        blip.classList.remove(\"active\");\n    });\n    const slider = document.getElementById(\"slider\");\n    const sliderIndex = parseInt(\n        getComputedStyle(slider).getPropertyValue(\"--slider-index\")\n    );\n\n    document.getElementById(sliderIndex).classList.add(\"active\");\n}\n\nexport { moveSlider, checkProgress };\n","import { getPlanetData } from \"./fetchPlanetData\";\n\nconst title = document.querySelector(\".planet-title\");\nconst avgTemp = document.getElementById(\"avgTempValue\");\nconst surfaceGravity = document.getElementById(\"surfaceGravityValue\");\nconst radius = document.getElementById(\"radiusValue\");\nconst mass = document.getElementById(\"massValue\");\nconst moons = document.getElementById(\"moonsValue\");\nconst escape = document.getElementById(\"escapeValue\");\n\n// Show/hide dropdown menu for temperature units\ndocument.addEventListener(\"click\", function (e) {\n    if (e.target && e.target.classList.contains(\"dropdown-button\")) {\n        document.querySelector(\".dropdown-options\").classList.toggle(\"active\");\n    }\n});\n\n// Hide dropdown options when a selection is made and display the selected temperature units\nlet currentTemp = \"Celsius\";\nlet selectedTemp;\ndocument.addEventListener(\"click\", function (e) {\n    if (e.target && e.target.classList.contains(\"temperature\")) {\n        document.querySelector(\".temp-text\").textContent = e.target.textContent;\n        document.querySelector(\".dropdown-options\").classList.toggle(\"active\");\n        selectedTemp = e.target.textContent;\n        changeTemp(currentTemp, selectedTemp);\n    }\n});\n\n// Toggle displayed temp units between Celsius, Fahrenheit or Kelvin\nfunction changeTemp(current, selected) {\n    if (current == \"Celsius\" && selected == \"Fahrenheit\") {\n        avgTemp.textContent = `${Math.round(\n            parseInt(avgTemp.textContent) * (9 / 5) + 32\n        )} \\u00B0F`;\n        currentTemp = \"Fahrenheit\";\n    } else if (current == \"Celsius\" && selected == \"Kelvin\") {\n        avgTemp.textContent = `${Math.round(\n            parseInt(avgTemp.textContent) + 273\n        )} K`;\n        currentTemp = \"Kelvin\";\n    } else if (current == \"Fahrenheit\" && selected == \"Celsius\") {\n        avgTemp.textContent = `${Math.round(\n            (parseInt(avgTemp.textContent) - 32) * (5 / 9)\n        )} \\u00B0C`;\n        currentTemp = \"Celsius\";\n    } else if (current == \"Fahrenheit\" && selected == \"Kelvin\") {\n        avgTemp.textContent = `${Math.round(\n            (parseInt(avgTemp.textContent) - 32) * (5 / 9) + 273\n        )} K`;\n        currentTemp = \"Kelvin\";\n    } else if (current == \"Kelvin\" && selected == \"Celsius\") {\n        avgTemp.textContent = `${Math.round(\n            parseInt(avgTemp.textContent) - 273\n        )} \\u00B0C`;\n        currentTemp = \"Celsius\";\n    } else if (current == \"Kelvin\" && selected == \"Fahrenheit\") {\n        avgTemp.textContent = `${Math.round(\n            (parseInt(avgTemp.textContent) - 273) * (9 / 5) + 32\n        )} \\u00B0F`;\n        currentTemp = \"Fahrenheit\";\n    } else {\n        return;\n    }\n}\n\n// Display content for selected planet\nfunction populateData(data) {\n    document.querySelector(\".temp-text\").textContent = \"Celsius\";\n    currentTemp = \"Celsius\";\n\n    const displayImage = document.getElementById(\"displayImage\");\n    displayImage.src = `../src/images/${data.englishName}.png`;\n\n    const forwardSlash = \"/\";\n    const superscript = document.createElement(\"SUP\");\n    const kg = document.createElement(\"span\");\n    const squared = document.createElement(\"SUP\");\n\n    title.textContent = data.englishName;\n\n    avgTemp.textContent = `${data.avgTemp - 273} \\u00B0C`;\n\n    surfaceGravity.textContent = `${Math.round(\n        (data.gravity / 10) * 10\n    )} m${forwardSlash}s`;\n    squared.textContent = \"2\";\n    surfaceGravity.appendChild(squared);\n\n    radius.textContent = `${Math.round(data.meanRadius)} km`;\n\n    mass.textContent = `${data.mass.massValue.toPrecision(2)} x 10`;\n    superscript.textContent = `${data.mass.massExponent} `;\n    kg.textContent = \"kg\";\n    mass.appendChild(superscript);\n    mass.appendChild(kg);\n\n    if (data.moons == null) {\n        moons.textContent = \"0\";\n    } else {\n        moons.textContent = data.moons.length;\n    }\n    escape.textContent = `${Math.round(data.escape / 1000)} km${forwardSlash}s`;\n}\n\nexport { populateData };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { moveSlider, checkProgress } from \"./imageSlider.js\";\nimport { getPlanetData, highlightPlanet } from \"./fetchPlanetData.js\";\n\n// Scroll to top of page on load\nwindow.onload = function () {\n    window.scrollTo(0, 0);\n};\n\n// Intro animation\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    setTimeout(() => {\n        const title = document.querySelector(\".title\");\n        title.style.top = \"1rem\";\n    }, 2000);\n\n    setTimeout(() => {\n        const intro = document.querySelector(\".intro\");\n        intro.style.opacity = \"0\";\n    }, 2000);\n\n    const earth = document.querySelector(\"#slider :nth-child(3)\");\n    earth.style.border = \"1px solid whitesmoke\";\n\n    getPlanetData(\"earth\");\n});\n\n// Listen for click on image carousel handles, trigger slider move\ndocument.addEventListener(\"click\", (e) => {\n    let handle;\n    if (e.target.matches(\".handle\")) {\n        handle = e.target;\n    } else {\n        handle = e.target.closest(\".handle\");\n    }\n\n    if (handle != null) {\n        moveSlider(handle);\n    }\n});\n"],"names":[],"sourceRoot":""}